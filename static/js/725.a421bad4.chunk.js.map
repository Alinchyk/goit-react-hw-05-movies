{"version":3,"file":"static/js/725.a421bad4.chunk.js","mappings":"mTACMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,+GAEND,EAAAA,EAAAA,IAAA,sCAAyCD,IAFnC,uBAErBG,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,sCAKvB,IAAIC,MAAM,yCALa,yDAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,gGAELN,EAAAA,EAAAA,IAAA,iBACFM,EADE,oBACiBP,IACjCQ,MAAK,SAAAC,GAAG,MAAK,CACZC,MAAOD,EAAIN,KAAKO,MAChBC,YAAaF,EAAIN,KAAKQ,YACtBC,aAAcH,EAAIN,KAAKS,aACvBC,SAAUJ,EAAIN,KAAKU,SACnBC,OAAQL,EAAIN,KAAKW,OALV,IAJa,cAElBX,EAFkB,yBAWjBA,GAXiB,sCAalB,IAAIE,MAAM,sCAbQ,yDAAH,sDAiBZU,EAAW,mCAAG,WAAMR,GAAN,kGAEAN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACgBP,EADhB,oBAFA,uBAEfG,EAFe,EAEfA,KAFe,kBAKhBA,EAAKa,MALW,sCAOjB,IAAIX,MAAM,8BAPO,yDAAH,sDAWXY,EAAc,mCAAG,WAAMV,GAAN,gGAEHN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACgBP,EADhB,YAFG,cAEpBkB,EAFoB,yBAKnBA,EAASf,KAAKC,SALK,sCAOpB,IAAIC,MAAM,iCAPU,yDAAH,sDAWdc,EAAe,mCAAG,WAAMC,GAAN,kGAEJnB,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBoB,EADrB,+CAFI,uBAEnBjB,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3BkB,QAAQC,MAAM,gCAAd,MAP2B,yDAAH,qD,8KClDfC,EAAQC,EAAAA,GAAAA,GAAH,mG,SCEH,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,IACC,wBACGA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMqB,GAAE,iBAAYD,GAAME,MAAO,CAAEC,KAAMN,EAASO,UAAlD,UACE,SAACX,EAAD,UAAQb,OAFHoB,EADC,OAWrB,CCpBM,IAAMK,EAAYX,EAAAA,GAAAA,GAAH,iNCGP,SAASY,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOvC,EAAAA,EAAAA,MAFP,OAERwB,EAFQ,OAGda,EAAkBb,GAHJ,gDAKdL,QAAQC,MAAM,wCAAd,MALc,yDAAH,qDASfmB,GACD,GAAE,KAGD,iCACE,SAACN,EAAD,8BACA,SAACV,EAAD,CAAYC,OAAQY,MAGzB,C","sources":["components/services/moviesApi.js","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","views/Home/Home.styled.js","views/Home/Home.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '79f7e9d5eb5b406ae3795a32db0606aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops... seems like an error occurred.');\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const data = await axios\n      .get(`/movie/${movieId}?api_key=${API_KEY}`)\n      .then(res => ({\n        title: res.data.title,\n        poster_path: res.data.poster_path,\n        vote_average: res.data.vote_average,\n        overview: res.data.overview,\n        genres: res.data.genres,\n      }));\n    return data;\n  } catch (error) {\n    throw new Error('Error while fetching movie details');\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie cast');\n  }\n};\n\nexport const getReviewsInfo = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch movie reviews');\n  }\n};\n\nexport const getMoviesByName = async query => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error while searching movies:', error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  color: black;\n  padding: 5px;\n`;\n","import { useLocation, Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Title } from './MovieList.styled';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`movies/${id}`} state={{ from: location.pathname }}>\n                <Title>{title}</Title>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h2`\n  color: black;\n  font-family: 'Droid serif', serif;\n  font-size: 36px;\n  font-weight: 800;\n  font-style: italic;\n  line-height: 44px;\n  margin: 0 0 12px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'components/services/moviesApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { HomeTitle } from './Home.styled';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movies = await getTrendingMovies();\n        setTrendingMovies(movies);\n      } catch (error) {\n        console.error('Error while fetching trending movies:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <HomeTitle>Trending today</HomeTitle>\n      <MoviesList movies={trendingMovies} />\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovies","data","results","Error","getMovieById","movieId","then","res","title","poster_path","vote_average","overview","genres","getCastInfo","cast","getReviewsInfo","response","getMoviesByName","query","console","error","Title","styled","MoviesList","movies","location","useLocation","map","id","to","state","from","pathname","HomeTitle","Home","useState","trendingMovies","setTrendingMovies","useEffect","fetchData"],"sourceRoot":""}